.title {
	font-size: 1.875rem;
	line-height: 2.25rem;
	font-weight: 700;
	margin: 0.5rem 0;
}

.metadata {
	margin: 0.5rem 0;
	opacity: 0.6;
}

.math {
	display: inline;
	vertical-align: middle;
}

.prose {
	color: var(--prose-bd);
	word-break: break-all;
	max-width: 56rem;
	margin: 2rem auto;
	font-size: 1rem;
	line-height: 1.75;
}

.prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 1.25em;
	margin-bottom: 1.25em;
}
.prose
	:where([class~="lead"]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	color: var(--prose-lead);
	font-size: 1.25em;
	line-height: 1.6;
	margin-top: 1.2em;
	margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-l);
	text-decoration: underline;
	font-weight: 500;
}
.prose
	:where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-b);
	font-weight: 600;
}
.prose
	:where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: inherit;
}
.prose
	:where(blockquote strong):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	color: inherit;
}
.prose
	:where(thead th strong):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	list-style-type: decimal;
	margin-top: 1.25em;
	margin-bottom: 1.25em;
	padding-inline-start: 1.625em;
}
.prose
	:where(ol[type="A"]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	list-style-type: upper-alpha;
}
.prose
	:where(ol[type="a"]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	list-style-type: lower-alpha;
}
.prose
	:where(ol[type="A" s]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	list-style-type: upper-alpha;
}
.prose
	:where(ol[type="a" s]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	list-style-type: lower-alpha;
}
.prose
	:where(ol[type="I"]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	list-style-type: upper-roman;
}
.prose
	:where(ol[type="i"]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	list-style-type: lower-roman;
}
.prose
	:where(ol[type="I" s]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	list-style-type: upper-roman;
}
.prose
	:where(ol[type="i" s]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	list-style-type: lower-roman;
}
.prose
	:where(ol[type="1"]):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	list-style-type: disc;
	margin-top: 1.25em;
	margin-bottom: 1.25em;
	padding-inline-start: 1.625em;
}
.prose
	:where(ol > li):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	)::marker {
	font-weight: 400;
	color: var(--prose-cnt);
}
.prose
	:where(ul > li):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	)::marker {
	color: var(--prose-bu);
}
.prose :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-h);
	font-weight: 600;
	margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	border-color: var(--prose-hr);
	border-top-width: 1px;
	margin-top: 3em;
	margin-bottom: 3em;
}
.prose
	:where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	font-weight: 500;
	font-style: italic;
	color: var(--prose-q);
	border-inline-start-width: 0.25rem /* 4px */;
	border-inline-start-color: var(--prose-q-b);
	quotes: "\201C""\201D""\2018""\2019";
	margin-top: 1.6em;
	margin-bottom: 1.6em;
	padding-inline-start: 1em;
}
.prose
	:where(blockquote p:first-of-type):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	)::before {
	content: open-quote;
}
.prose
	:where(blockquote p:last-of-type):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	)::after {
	content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-h);
	font-weight: 800;
	font-size: 2.25em;
	margin-top: 0;
	margin-bottom: 0.8888889em;
	line-height: 1.1111111;
}
.prose
	:where(h1 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	font-weight: 900;
	color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-h);
	font-weight: 700;
	font-size: 1.5em;
	margin-top: 2em;
	margin-bottom: 1em;
	line-height: 1.3333333;
}
.prose
	:where(h2 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	font-weight: 800;
	color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-h);
	font-weight: 600;
	font-size: 1.25em;
	margin-top: 1.6em;
	margin-bottom: 0.6em;
	line-height: 1.6;
}
.prose
	:where(h3 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	font-weight: 700;
	color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-h);
	font-weight: 600;
	margin-top: 1.5em;
	margin-bottom: 0.5em;
	line-height: 1.5;
}
.prose
	:where(h4 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	font-weight: 700;
	color: inherit;
}
.prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	font-weight: 500;
	font-family: inherit;
	color: var(--prose-kbd);
	box-shadow: 0 0 0 1px rgb(var(--prose-kbd-s) / 10%),
		0 3px 0 rgb(var(--prose-kbd-s) / 10%);
	font-size: 0.875em;
	border-radius: 0.3125rem /* 5px */;
	padding-top: 0.1875em;
	padding-inline-end: 0.375em;
	padding-bottom: 0.1875em;
	padding-inline-start: 0.375em;
}
.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-c);
	font-weight: 600;
	font-size: 0.875em;
}
.prose
	:where(code):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	)::before {
	content: "`";
}
.prose
	:where(code):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	)::after {
	content: "`";
}
.prose
	:where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: inherit;
}
.prose
	:where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: inherit;
}
.prose
	:where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: inherit;
	font-size: 0.875em;
}
.prose
	:where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: inherit;
	font-size: 0.9em;
}
.prose
	:where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: inherit;
}
.prose
	:where(blockquote code):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	color: inherit;
}
.prose
	:where(thead th code):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-pc);
	background-color: var(--prose-p-bg);
	overflow-x: auto;
	font-weight: 400;
	font-size: 0.875em;
	line-height: 1.7142857;
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
	border-radius: 0.375rem /* 6px */;
	padding-top: 0.8571429em;
	padding-inline-end: 1.1428571em;
	padding-bottom: 0.8571429em;
	padding-inline-start: 1.1428571em;
}
.prose
	:where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	background-color: transparent;
	border-width: 0;
	border-radius: 0;
	padding: 0;
	font-weight: inherit;
	color: inherit;
	font-size: inherit;
	font-family: inherit;
	line-height: inherit;
}
.prose
	:where(pre code):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	)::before {
	content: none;
}
.prose
	:where(pre code):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	)::after {
	content: none;
}
.prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	width: 100%;
	table-layout: auto;
	margin-top: 2em;
	margin-bottom: 2em;
	font-size: 0.875em;
	line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--prose-th-b);
}
.prose
	:where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-h);
	font-weight: 600;
	vertical-align: bottom;
	padding-inline-end: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-inline-start: 0.5714286em;
}
.prose
	:where(tbd tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--prose-td-b);
}
.prose
	:where(tbd tr:last-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	border-bottom-width: 0;
}
.prose
	:where(tbd td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	border-top-width: 1px;
	border-top-color: var(--prose-th-b);
}
.prose
	:where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	vertical-align: top;
}
.prose
	:where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	text-align: start;
}
.prose
	:where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 0;
	margin-bottom: 0;
}
.prose
	:where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	color: var(--prose-cap);
	font-size: 0.875em;
	line-height: 1.4285714;
	margin-top: 0.8571429em;
}
.prose
	:where(picture > img):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 0;
	margin-bottom: 0;
}
.prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}
.prose
	:where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	padding-inline-start: 0.375em;
}
.prose
	:where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	padding-inline-start: 0.375em;
}
.prose
	:where(.prose > ul > li p):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}
.prose
	:where(.prose > ul > li p):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}
.prose
	:where(.prose > ul > li > p:first-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 1.25em;
}
.prose
	:where(.prose > ul > li > p:first-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 1.25em;
}
.prose
	:where(.prose > ul > li > p:last-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-bottom: 1.25em;
}
.prose
	:where(.prose > ul > li > p:last-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-bottom: 1.25em;
}
.prose
	:where(.prose > ol > li > p:first-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 1.25em;
}
.prose
	:where(.prose > ol > li > p:first-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 1.25em;
}
.prose
	:where(.prose > ol > li > p:last-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-bottom: 1.25em;
}
.prose
	:where(.prose > ol > li > p:last-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-bottom: 1.25em;
}
.prose
	:where(ul ul, ul ol, ol ul, ol ol):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 1.25em;
	margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 0.5em;
	padding-inline-start: 1.625em;
}
.prose
	:where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 0;
}
.prose
	:where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 0;
}
.prose
	:where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 0;
}
.prose
	:where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 0;
}
.prose
	:where(thead th:first-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	padding-inline-start: 0;
}
.prose
	:where(thead th:last-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	padding-inline-end: 0;
}
.prose
	:where(tbd td, tfoot td):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	padding-top: 0.5714286em;
	padding-inline-end: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-inline-start: 0.5714286em;
}
.prose
	:where(tbd td:first-child, tfoot td:first-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	padding-inline-start: 0;
}
.prose
	:where(tbd td:last-child, tfoot td:last-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	padding-inline-end: 0;
}
.prose
	:where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}
.prose
	:where(.prose > :first-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 0;
}
.prose
	:where(.prose > :first-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-top: 0;
}
.prose
	:where(.prose > :last-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-bottom: 0;
}
.prose
	:where(.prose > :last-child):not(
		:where([class~="not-prose"], [class~="not-prose"] *)
	) {
	margin-bottom: 0;
}
